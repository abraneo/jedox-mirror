<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.jedox</groupId>
		<artifactId>etl</artifactId>
		<version>5.1</version>
		<relativePath>../</relativePath>
	</parent>
	<artifactId>etlserver</artifactId>
	<name>ETL-Server</name>
	<description>
		This is the ETL Servlet. It is a full featured ETL Server which
		can be controlled by SOAP messages.
	</description>
	<packaging>war</packaging>	
	<build>
		<plugins>
		<!--  <plugin>
		    <artifactId>maven-clean-plugin</artifactId>
		    <configuration>
		      <filesets>
		        <fileset>
		          <directory>${pom.basedir}/src/main/webapp/data/files</directory>
		          <includes>
		            <include>*</include>
		          </includes>
		          <followSymlinks>false</followSymlinks>
		        </fileset>
		      </filesets>
		    </configuration>
		  </plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy todir="${pom.basedir}/target">
									<fileset dir="${pom.basedir}/src/main/webapp">
										<include name="**/*" />
									</fileset>
								</copy>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpackÂ­config</id>
						<goals>
							<goal>unpack</goal>
						</goals>
						<phase>validate</phase>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.jedox</groupId>
									<artifactId>etlcomponents</artifactId>
									<version>${project.parent.version}</version>
									<type>zip</type>
									<classifier>config</classifier>
									<outputDirectory>
										${pom.basedir}/target/config
									</outputDirectory>
								</artifactItem>
								
								<!-- <artifactItem>
									<groupId>com.jedox</groupId>
									<artifactId>etlcomponents</artifactId>
									<version>${project.parent.version}</version>
									<type>zip</type>
									<classifier>samples</classifier>
									<includes>files/*</includes>
									<outputDirectory>
										${pom.basedir}/src/main/webapp/data
									</outputDirectory>
								</artifactItem> -->
								
								<artifactItem>
									<groupId>com.jedox</groupId>
									<artifactId>etlcomponents</artifactId>
									<version>${project.parent.version}</version>
									<type>zip</type>
									<classifier>samples</classifier>
									<outputDirectory>
										${pom.basedir}/target/data
									</outputDirectory>
								</artifactItem> 
							
								<artifactItem>
									<groupId>org.apache.axis2</groupId>
									<artifactId>axis2-webapp</artifactId>
									<type>war</type>
									<excludes>WEB-INF/classes/*.properties,WEB-INF/web.xml,WEB-INF/conf/axis2.xml,WEB-INF/lib/*,axis2-web/viewphases.jsp,,WEB-INF/modules/scripting*</excludes> 
									<outputDirectory>
										${pom.basedir}/src/main/webapp
									</outputDirectory>
								</artifactItem>	
							</artifactItems>
						</configuration>
					</execution>
					<!-- <execution>
						<id>copy-tomcat-lib-artifacts</id>
	<goals>
		<goal>copy</goal>
	</goals>
	<phase>validate</phase>
	<configuration>
		<artifactItems>
			<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-annotations-api</artifactId>
			</artifactItem>
			<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-api</artifactId>
			</artifactItem>
			<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-catalina-ha</artifactId>
			</artifactItem>
			<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-catalina-ant</artifactId>
			</artifactItem>
			<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-catalina</artifactId>
			</artifactItem>
			<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-coyote</artifactId>
			</artifactItem>
			<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-dbcp</artifactId>
			</artifactItem>
						<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-el-api</artifactId>
			</artifactItem>
									<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-i18n-es</artifactId>
			</artifactItem>
												<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-i18n-fr</artifactId>
			</artifactItem>
												<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-i18n-ja</artifactId>
			</artifactItem>
															<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-jasper</artifactId>
			</artifactItem>
															<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-jasper-el</artifactId>
			</artifactItem>
															<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-jsp-api</artifactId>
			</artifactItem>
			
																		<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-juli</artifactId>
			</artifactItem>
			
																		<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-servlet-api</artifactId>
			</artifactItem>
			
																					<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-tribes</artifactId>
			</artifactItem>
			
																								<artifactItem>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-util</artifactId>
			</artifactItem>


		</artifactItems>
							<outputDirectory>
								${pom.basedir}/target/tomcatlib
							</outputDirectory>
						</configuration>
					</execution>
					 -->
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>${project.artifactId}</warName>
					<webResources>
            		<resource>
             		 <directory>target/data</directory>
             		 <targetPath>data</targetPath>
			         <excludes>
			             <exclude>files/*.*</exclude>
			             <exclude>files/hsqldb/*.*</exclude>
			             <exclude>samples/*.*</exclude>
			          </excludes>
            		  </resource>
            		 <resource>
             			 <directory>target/config</directory>
	             		 <targetPath>config</targetPath>
            		  </resource>
            			 
          			</webResources>
          		
					<!--  cschw: not needed any more, because we have all ready in src/main/webapp via dependency plugin 
					<overlays>
						<overlay>
							<groupId>com.jedox</groupId>
							<artifactId>etlcomponents</artifactId>
							<type>zip</type>
							<classifier>config</classifier>
							<targetPath>config</targetPath>
						</overlay>
						<overlay>
							<groupId>org.apache.axis2</groupId>
							<artifactId>axis2-webapp</artifactId>
							<type>war</type>
							<targetPath>.</targetPath>
							<excludes>
               					 <exclude>WEB-INF/web.xml</exclude>
               					 <exclude>WEB-INF/conf/axis2.xml</exclude>
               					 <exclude>WEB-INF/lib/*</exclude>
             				 </excludes>	
						</overlay>
					</overlays>-->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>					
						<descriptor>
							src/main/assembly/etl-common-bundle.xml
						</descriptor>
						<descriptor>
							src/main/assembly/tomcat7-bundle.xml
						</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<!--  example for building rpm package
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<configuration>
					<copyright>GPL</copyright>
					<group>ETLServer</group>
					<distribution>Palo</distribution>
					<mappings>
						<mapping>
							<directory>/opt/palo/${project.artifactId}-${project.version}</directory>
							<filemode>775</filemode>
							<username>root</username>
							<groupname>root</groupname>
							<sources>
								<source>
									<location>target/${project.artifactId}-${project.version}-tomcat</location>
								</source>
							</sources>
						</mapping>
					</mappings>
					<postremoveScriptlet>
						<script>rm -f /opt/palo/${project.artifactId}</script>
					</postremoveScriptlet>
					<preinstallScriptlet>
						<script>echo "installing now"</script>
					</preinstallScriptlet>
					<postinstallScriptlet>
						<script>ln -s
							/opt/palo/${project.artifactId}-${project.version}
							/opt/palo/${project.artifactId}</script>
					</postinstallScriptlet>
					<requires />

				</configuration>
			</plugin>
			-->
			<!--
				this throws a null pointer exception most probably because of a
				namespace problem. Until fixed get the wsdl from the running server!
			-->
			<!--
				<plugin> <groupId>org.apache.axis2</groupId>
				<artifactId>axis2-java2wsdl-maven-plugin</artifactId>
				<configuration>
				<className>com.jedox.etl.service.ETLClient</className>
				</configuration> <executions> <execution>
				<phase>generate-sources</phase> <goals> <goal>java2wsdl</goal>
				</goals> </execution> </executions> </plugin>
			-->
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>							
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.4,)
										</versionRange>
										<goals>
											<goal>unpack</goal>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>			
	</build>
	<dependencies>
		<dependency>
			<groupId>com.jedox</groupId>
			<artifactId>etlcore</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jedox</groupId>
			<artifactId>etlcomponents</artifactId>
			<version>${project.parent.version}</version>
			<classifier>config</classifier>
			<type>zip</type>
			<scope>provided</scope>
		</dependency>
		<dependency> 
			<groupId>com.jedox</groupId>
			<artifactId>etlcomponents</artifactId>
			<version>${project.parent.version}</version> 
			<classifier>samples</classifier>
			<type>zip</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.jedox</groupId>
			<artifactId>etlcomponents</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-kernel</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-transport-local</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-transport-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-xmlbeans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-jaxws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-transport-tcp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.ws.commons.schema</groupId>
			<artifactId>XmlSchema</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.ws.commons.axiom</groupId>
			<artifactId>axiom-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.ws.commons.axiom</groupId>
			<artifactId>axiom-impl</artifactId>
		</dependency>
		<!--  
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>core</artifactId>
		</dependency>
		-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-webapp</artifactId>
			<type>war</type>
		</dependency>
		<!--  
		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
		</dependency>
		-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
			</plugin>
		</plugins>
	</reporting>
</project>